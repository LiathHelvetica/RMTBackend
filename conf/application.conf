play.filters.enabled += "play.filters.cors.CORSFilter"

play.filters.cors {
  allowedOrigins = ["http://localhost:3000"],
  exposedHeaders = ["*"]
  preflightMaxAge = 1 day
}

slick.dbs.default.profile="slick.jdbc.PostgresProfile$"
slick.dbs.default.db.driver="org.postgresql.Driver"
slick.dbs.default.db.url="jdbc:postgresql://localhost:5432/pamiw"
slick.dbs.default.db.user="pamiw"
slick.dbs.default.db.password="pamiw"

play.http.secret.key="SzRa9OKk4QYeyeaDZHr3pp8rhTv8vPFm49wtiXgbdlIJc8mu8UzsLB9To4is8hwsl0FBkH8tCgAbaGQIN7ne3oweiGfI4UaZud02g5Aa1IVPru92QcLZe36CzqaDP92e05lYyUts6KW9VjFviB155JdfJgxYLluULuRvzhVouuXAX6T5pnVtGjL1FZpTFhrXHumwAnGEtjxamcFW18D46yG7tDCe6DKJ9ND6xyxZrbvHsohw1n842vhFgEpQvQS1"

play.http.session.cookieName="rmtToken"
play.http.session.maxAge=4h
play.http.session.secure=true
play.http.session.httpOnly=true
// play.http.session.sameSite="strict"
play.http.session.jwt.signatureAlgorithm="HS256" // might not be necessary
play.http.session.algorithm="HS256"
play.http.session.tokenPrefix=""

// TODO: security issue - figure out CSRF
play.filters.csrf.header.bypassHeaders {
  // X-Requested-With: "*"
  Csrf-Token: "nocheck"
}

rmt {
  security {
    id.string.part: 16,
    salt.length: 256,
    // length: 256
    pepper: "Xyzq1XxPtgsEDefVr6XnXJijNrdqrMdOo4MAnJ4X8KLd1CkII8OAV1ThCKM9qmJDwn3iTGkZJrkXgUR28Wmwa6mlVjPmh9MbVULODiQcSWRWh7P7ImkItUZ6GsBJr7nBJqKnzEBD2SSY81DcCvawEhzEuNVwzidwRLaXaHWH4NXp3hnpBOiVCCJ973lmO9NYr7xuUJ1GcpHZIABW7rGBEttOgBU5OPvoTgXFiqB4FShxLEQWEI7DqXlI5Dr40Znc"
    hash.rounds: 100,
    redacted.string: "[REDACTED]"
  },
  key.map {
    id: "id"
    email: "email",
    userId: "userId",
    userName: "userName",
    password: "password",
    salt: "salt",
    jwt.sub: "sub",
    message: "message",
    riddleTitle: "title",
    riddleContents: "contents",
    riddleType: "riddleType",
    answers: "answers",
    answer: "answer",
    isCorrect: "isCorrect",
    creationDate: "creationDate",
    lastUpdateDate: "lastUpdateDate",
    isAccepted: "isAccepted",
    riddleId: "riddleId",
    deletedRecords: "deletedRecords",
    creatorId: "creatorId",
    creatorName: "creatorName",
    action: "action",
    list.data: "data"
  },
  administration: {
    accept.default: true
  },
  dateTime: {
    format: "yyyy-MM-dd'T'HH:mm:ss'Z'"
  }
  encoding: "UTF-8"
}